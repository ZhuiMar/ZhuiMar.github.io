<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[MemoryManagement]]></title>
      <url>http://yoursite.com/2016/12/31/MemoryManagement/</url>
      <content type="html"><![CDATA[<p>苹果是如何“收垃圾”的?</p>
<p>不管搭载的iOS还是Android，设备的运行内存都是有限的。在你开了一大堆应用程序，快要把内存占满的时候，为了维持正常运行，iOS和Android都会Kill掉一些后台进程，这个行为也称为“垃圾回收机制”。但需要注意的是，iOS和Android“收垃圾”的方式不甚相同。iOS会依次把最老的应用直接关闭掉，所以时候在切换到很老的后台App时会发现，它们都会从标题界面重新启动。相比之下，Android的胆子则要小得多，它不会直接关掉App，而是筛选出其中的一些无用对象，率先把它们Kill掉，从而释放部分内存。但只要你不手动关，这些后台程序都不会自动消失。因此，苹果设备就算只有1GB运行内存，你正在用的App也绝对不会卡，而Android后台程序不会自动被关闭，需要提供更多的内存(2GB、3GB甚至更多)才能保证系统流畅运行。内存需求小不是苹果牛掰的意思，虽然1GB用着也很舒坦，但说“苹果优化好”似乎不太准确，因为iOS和Android的垃圾处理方法并不是一个高端、一个土鳖，而是各有利弊。</p>
<p>iOS会无差别地关掉老应用，这意味着如果你正在玩一个大型游戏，那么可能微信、微博、QQ这些软件就全都被关掉了。你若想切换回这些软件，就要经历一个相当闹心的启动过程。朋友圈发完了、微博也玩够了，这回天下该太平了吧?等等，但愿你的游戏还能回到刚才暂停的位置……另外一个比较闹心的场景就是你在Safari浏览器里开了N个标签，1GB运存承受不住那么多的内容，于是非常自觉地把最老的几个网页给挂起了。如果那几个页面刚好是你填了一半的付款界面或者是写了一半的文章，那么……那Android又是怎么坑爹的呢? 想必用家们都深有感触：切换界面会卡、接电话会卡、解锁会卡，连看个照片都得等半天。但是，Android的大内存也有得天独厚的好处，那就是不管你想开什么后台应用，它们都会把你上次干半截的事情完整地带到前台，不会连个招呼都不打就关了它们。尤其目前市面上具备3GB运行内存的Android手机，它们既能够保证大量应用同时运行，也能保持整个系统处在一个比较流畅的状态，整体的体验也还是可以的(开好几十个应用不关的除外)。所以，iOS的“霸道型小内存”和Android的“人文关怀型大内存”其实都是各有利弊的，并不是简单的一个比另一个好的关系。</p>
<p>运存那么小，你以为苹果真的很满足?</p>
<p>苹果在iPhone 6和6 Plus上保持1GB运行内存，不单单是因为用起来不卡，其实也基于以下一些问题进行了考量：内存耗电：更多的内存会消耗更多的电能，iPhone6内存仅1GB，而且采用了LPDDR3低电压版模块，节能效果相当可观;成本问题：升级到2GB或者更高，单台手机的制造成本并不会提高多少，但是对于一个出货量动辄好几千万的产品来说，那算下来可得损失不少钱呢!用户需求问题：虽然存在着一些略显坑爹的关后台问题，但是果粉们早就习惯了，就算加大内存容量，整体体验的提升也不见得多明显。对于追求各方面性能均衡的苹果来说，单个指标不突出不算是缺憾。其实说到底，在理想状态下，苹果也非常想让内存更大一些，毕竟用户运行多任务的时候，谁都希望能多开几个应用。苹果也意识到随着用户需求的提高，内存问题势必变得愈加尖锐，他们已然开始行动了：iPad Air 2升级到了2GB内存，这样一来，相信下一代的iPhone离大运存也不会太远了。</p>
<p>那么1G的内存是如何分配给各个App的嘞?</p>
<p>苹果给每个应用程序设置20M的内存警告量，30M的闪退量，游戏会略微放款10~20M，需要向系统申请。这一条说明除了系统本身占用内存以外，任何程序几乎都不可能占用超过50M内存。实际上，不是单个程序存在50M的内存使用上限，而是单线程使用上限是50M，同一个程序可以加载多个线程，同一个程序可以使用多个线程。</p>
<p>关于后台:<br>苹果设计本身就没有后台，当你把程序最小化的时候程序就暂停了一切活动。如果应用想继续运行一部分功能的话，必须向系统申请运行时长，或者调用系统功能，比如音乐播放。由此跟安卓需要大内存来支持后台运行的区别就显而易见了，因为安卓是在Linux上跑的Java虚拟机，他的内存管理机制是申请之后就一直在那放着，等一个Runtime周期结束之后会自动收回不必要的内存。</p>
<p>关于内存：<br>个人认为，IOS只要不彻底重新编写的话，苹果几乎不可能开放海量内存，因为它既不支持真后台，又给APP设置了50M的内存使用上限。打个比方：你开法拉利（超大内存），我开QQ（1G内存），咱俩一起在路上跑（使用内存），但是限速50（内存使用限制），只要超过限速就扣车（超过限制即强行释放内存），你开再好的车也不可能比我快多少，因为苹果不让，除非苹果放开限速让你随便跑（开放内存配额上限）。但是不把路挖掉重新铺的话（系统限制，除非大刀阔斧的做改造，否则开放意义也不大，主要是苹果公司认为没意义……），就不能开放限速，所以现阶段只能限速50.这就是IPHONE只用1G内存的原因。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Enum]]></title>
      <url>http://yoursite.com/2016/12/30/Enum/</url>
      <content type="html"><![CDATA[<p>Ios中常用的枚举的几种写法</p>
<p>1.普通的枚举<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span>&#123;</div><div class="line">    XMtop,</div><div class="line">    XMbottom,</div><div class="line">&#125;XM;</div></pre></td></tr></table></figure></p>
<p>2.自定义类型枚举<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, KSType) &#123;</div><div class="line">    KSTypeTop,</div><div class="line">    KSTypeBottom,</div><div class="line">    KSTypeRight,</div><div class="line">    KSTypeLeft,</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>3.移位枚举:一个参数可以传递多个值<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="built_in">NS_OPTIONS</span>(<span class="built_in">NSInteger</span>, SType) &#123;</div><div class="line">    STypeTop        = <span class="number">1</span>&lt;&lt;<span class="number">0</span>,</div><div class="line">    STypeBottom     = <span class="number">1</span>&lt;&lt;<span class="number">1</span>,</div><div class="line">    STypeRight      = <span class="number">1</span>&lt;&lt;<span class="number">2</span>,</div><div class="line">    STypeLeft       = <span class="number">1</span>&lt;&lt;<span class="number">3</span>,</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[NSDecimalNumber]]></title>
      <url>http://yoursite.com/2016/12/20/Ios%E7%B2%BE%E5%BA%A6/</url>
      <content type="html"><![CDATA[<p>NSDecimalNumber Ios精度计算</p>
<p>.m文件<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Iimport &lt;Foundation/Foundation.h&gt;</div><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">HighPrecision</span> : <span class="title">NSObject</span> </span></div><div class="line">+ (<span class="built_in">NSString</span> *)plusWithA:(<span class="built_in">NSString</span> *)A andB:(<span class="built_in">NSString</span> *)B; <span class="comment">// 加法</span></div><div class="line">+ (<span class="built_in">NSString</span> *)minuWithA:(<span class="built_in">NSString</span> *)A andB:(<span class="built_in">NSString</span> *)B; <span class="comment">// 减法</span></div><div class="line">+ (<span class="built_in">NSString</span> *)multiplyWithA:(<span class="built_in">NSString</span> *)A andB:(<span class="built_in">NSString</span> *)B; <span class="comment">// 乘法</span></div><div class="line">+ (<span class="built_in">NSString</span> *)devideWithA:(<span class="built_in">NSString</span> *)A andB:(<span class="built_in">NSString</span> *)B; <span class="comment">// 除法</span></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure></p>
<p>.h文件<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">HighPrecision</span></span></div><div class="line">+ (<span class="built_in">NSString</span> *)plusWithA:(<span class="built_in">NSString</span> *)A andB:(<span class="built_in">NSString</span> *)B</div><div class="line">&#123;</div><div class="line">    <span class="built_in">NSDecimalNumber</span> *a = [<span class="built_in">NSDecimalNumber</span> decimalNumberWithString:A];</div><div class="line">    <span class="built_in">NSDecimalNumber</span> *b = [<span class="built_in">NSDecimalNumber</span> decimalNumberWithString:B];</div><div class="line">    <span class="built_in">NSDecimalNumber</span> *h = [a decimalNumberByAdding: b withBehavior:[<span class="keyword">self</span> format]];</div><div class="line">    <span class="built_in">NSString</span> *result = [h stringValue];</div><div class="line">    <span class="keyword">return</span> result;</div><div class="line">&#125;</div><div class="line">+ (<span class="built_in">NSString</span> *)minuWithA:(<span class="built_in">NSString</span> *)A andB:(<span class="built_in">NSString</span> *)B</div><div class="line">&#123;</div><div class="line"> 	<span class="built_in">NSDecimalNumber</span> *a = [<span class="built_in">NSDecimalNumber</span> decimalNumberWithString:A];</div><div class="line"> 	<span class="built_in">NSDecimalNumber</span> *c = [a decimalNumberBySubtracting:b withBehavior:[<span class="keyword">self</span> format]];</div><div class="line"> 	<span class="built_in">NSString</span> *result = [c stringValue];</div><div class="line"> 	<span class="keyword">return</span> result;</div><div class="line">&#125;</div><div class="line">+ (<span class="built_in">NSString</span> *)multiplyWithA:(<span class="built_in">NSString</span> *)A andB:(<span class="built_in">NSString</span> *)B</div><div class="line">&#123;</div><div class="line">   <span class="built_in">NSDecimalNumber</span> *a = [<span class="built_in">NSDecimalNumber</span> decimalNumberWithString:A];</div><div class="line">   <span class="built_in">NSDecimalNumber</span> *b = [<span class="built_in">NSDecimalNumber</span> decimalNumberWithString:B];</div><div class="line">   <span class="built_in">NSDecimalNumber</span> *j = [a decimalNumberByMultiplyingBy:b withBehavior:[<span class="keyword">self</span> format]];</div><div class="line">   <span class="built_in">NSString</span> *result = [j stringValue];</div><div class="line">   <span class="keyword">return</span> result;</div><div class="line">&#125;</div><div class="line">+ (<span class="built_in">NSString</span> *)devideWithA:(<span class="built_in">NSString</span> *)A andB:(<span class="built_in">NSString</span> *)B</div><div class="line">&#123;</div><div class="line">    <span class="built_in">NSDecimalNumber</span> *a = [<span class="built_in">NSDecimalNumber</span> decimalNumberWithString:A];</div><div class="line">    <span class="built_in">NSDecimalNumber</span> *b = [<span class="built_in">NSDecimalNumber</span> decimalNumberWithString:B];</div><div class="line">    <span class="built_in">NSDecimalNumber</span> *s = [a decimalNumberByDividingBy:b withBehavior:[<span class="keyword">self</span> format]];</div><div class="line">    <span class="built_in">NSString</span> *result = [s stringValue];</div><div class="line">    <span class="keyword">return</span> result;</div><div class="line">&#125;</div><div class="line">+ (<span class="built_in">NSDecimalNumberHandler</span> *)format</div><div class="line">&#123;</div><div class="line">   <span class="comment">// NSRoundPlain 貌似取整</span></div><div class="line">   <span class="comment">// NSRoundDown 只舍不入</span></div><div class="line">   <span class="comment">// NSRoundUp 只入不舍</span></div><div class="line">   <span class="comment">// NSRoundBankers 貌似四舍五入</span></div><div class="line">    </div><div class="line">   <span class="built_in">NSDecimalNumberHandler</span> *roundUp = [<span class="built_in">NSDecimalNumberHandler</span></div><div class="line">        decimalNumberHandlerWithRoundingMode:<span class="built_in">NSRoundBankers</span></div><div class="line">                                       scale:<span class="number">2</span></div><div class="line">                                       raiseOnExactness:<span class="literal">NO</span></div><div class="line">                                       raiseOnOverflow:<span class="literal">NO</span></div><div class="line">                                       raiseOnUnderflow:<span class="literal">NO</span></div><div class="line">                                       raiseOnDivideByZero:<span class="literal">YES</span>];</div><div class="line">    <span class="keyword">return</span> roundUp;</div><div class="line">&#125;</div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
  
  
</search>
